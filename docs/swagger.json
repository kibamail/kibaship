{
    "swagger": "2.0",
    "info": {
        "description": "REST API server for managing Kibaship Operator resources",
        "title": "Kibaship Operator API",
        "termsOfService": "https://github.com/kibamail/kibaship-operator",
        "contact": {
            "name": "API Support",
            "email": "support@kibamail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/healthz": {
            "get": {
                "description": "Check if the API server is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthResponse"
                        }
                    }
                }
            }
        },
        "/projects": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new project with comprehensive resource management and application type configuration. The project will be assigned a random 8-character slug and configured with the specified resource profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project creation data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProjectCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Validation errors in request data",
                        "schema": {
                            "$ref": "#/definitions/models.ValidationErrors"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/{slug}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a project by its unique slug identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get project by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project slug (8-character identifier)",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "schema": {
                            "$ref": "#/definitions/models.ProjectResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Check if the API server is ready to serve requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ReadyResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid API key"
                }
            }
        },
        "main.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "main.ReadyResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ready"
                }
            }
        },
        "models.ApplicationTypeResourceConfig": {
            "type": "object",
            "properties": {
                "defaultLimits": {
                    "$ref": "#/definitions/models.ResourceLimitsSpec"
                },
                "resourceBounds": {
                    "$ref": "#/definitions/models.ResourceBoundsSpec"
                }
            }
        },
        "models.ApplicationTypeSettings": {
            "type": "object",
            "properties": {
                "dockerImage": {
                    "type": "boolean",
                    "example": true
                },
                "gitRepository": {
                    "type": "boolean",
                    "example": true
                },
                "mysql": {
                    "type": "boolean",
                    "example": true
                },
                "mysqlCluster": {
                    "type": "boolean",
                    "example": false
                },
                "postgres": {
                    "type": "boolean",
                    "example": true
                },
                "postgresCluster": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.CustomResourceLimits": {
            "type": "object",
            "properties": {
                "dockerImage": {
                    "$ref": "#/definitions/models.ApplicationTypeResourceConfig"
                },
                "gitRepository": {
                    "$ref": "#/definitions/models.ApplicationTypeResourceConfig"
                },
                "mysql": {
                    "$ref": "#/definitions/models.ApplicationTypeResourceConfig"
                },
                "postgres": {
                    "$ref": "#/definitions/models.ApplicationTypeResourceConfig"
                }
            }
        },
        "models.ProjectCreateRequest": {
            "type": "object",
            "properties": {
                "customResourceLimits": {
                    "$ref": "#/definitions/models.CustomResourceLimits"
                },
                "description": {
                    "type": "string",
                    "example": "A project for my awesome application"
                },
                "enabledApplicationTypes": {
                    "$ref": "#/definitions/models.ApplicationTypeSettings"
                },
                "name": {
                    "type": "string",
                    "example": "my-awesome-project"
                },
                "resourceProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ResourceProfile"
                        }
                    ],
                    "example": "development"
                },
                "volumeSettings": {
                    "$ref": "#/definitions/models.VolumeSettings"
                },
                "workspaceUuid": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                }
            }
        },
        "models.ProjectResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "A project for my awesome application"
                },
                "enabledApplicationTypes": {
                    "$ref": "#/definitions/models.ApplicationTypeSettings"
                },
                "name": {
                    "type": "string",
                    "example": "my-awesome-project"
                },
                "namespaceName": {
                    "type": "string",
                    "example": "project-abc123de"
                },
                "resourceProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ResourceProfile"
                        }
                    ],
                    "example": "development"
                },
                "slug": {
                    "type": "string",
                    "example": "abc123de"
                },
                "status": {
                    "type": "string",
                    "example": "Ready"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                },
                "uuid": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "volumeSettings": {
                    "$ref": "#/definitions/models.VolumeSettings"
                },
                "workspaceUuid": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                }
            }
        },
        "models.ResourceBoundsSpec": {
            "type": "object",
            "properties": {
                "maxLimits": {
                    "$ref": "#/definitions/models.ResourceLimitsSpec"
                },
                "minLimits": {
                    "$ref": "#/definitions/models.ResourceLimitsSpec"
                }
            }
        },
        "models.ResourceLimitsSpec": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string",
                    "example": "1"
                },
                "memory": {
                    "type": "string",
                    "example": "2Gi"
                },
                "storage": {
                    "type": "string",
                    "example": "10Gi"
                }
            }
        },
        "models.ResourceProfile": {
            "type": "string",
            "enum": [
                "development",
                "production",
                "custom"
            ],
            "x-enum-varnames": [
                "ResourceProfileDevelopment",
                "ResourceProfileProduction",
                "ResourceProfileCustom"
            ]
        },
        "models.ValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ValidationErrors": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ValidationError"
                    }
                }
            }
        },
        "models.VolumeSettings": {
            "type": "object",
            "properties": {
                "maxStorageSize": {
                    "type": "string",
                    "example": "100Gi"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}