apiVersion: apps/v1
kind: Deployment
metadata:
  name: acme-dns
  namespace: kibaship
  labels:
    app: acme-dns
    app.kubernetes.io/name: acme-dns
    app.kubernetes.io/component: dns
    app.kubernetes.io/managed-by: kibaship
spec:
  replicas: 2
  selector:
    matchLabels:
      app: acme-dns
  template:
    metadata:
      labels:
        app: acme-dns
        app.kubernetes.io/name: acme-dns
        app.kubernetes.io/component: dns
    spec:
      containers:
        - name: acme-dns
          image: joohoi/acme-dns:latest
          imagePullPolicy: IfNotPresent
          ports:
            # DNS port (UDP and TCP)
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            # HTTP API port
            - name: http
              containerPort: 80
              protocol: TCP

          env:
            # Point to the config file
            - name: ACMEDNS_CONFIG
              value: /etc/acme-dns/config.cfg

          volumeMounts:
            # Mount the config file
            - name: config
              mountPath: /etc/acme-dns
              readOnly: true
            # Mount the data directory for database
            - name: data
              mountPath: /var/lib/acme-dns

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 256Mi

          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE

      volumes:
        # ConfigMap volume for configuration
        - name: config
          configMap:
            name: acme-dns-config
        # PersistentVolumeClaim for database
        - name: data
          persistentVolumeClaim:
            claimName: acme-dns-data

      securityContext:
        fsGroup: 1000

      affinity:
        # Prefer to spread pods across different nodes
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: acme-dns
                topologyKey: kubernetes.io/hostname
