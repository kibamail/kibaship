apiVersion: v1
kind: ConfigMap
metadata:
  name: acme-dns-config
  namespace: kibaship
  labels:
    app: acme-dns
    app.kubernetes.io/name: acme-dns
    app.kubernetes.io/component: dns
    app.kubernetes.io/managed-by: kibaship
data:
  config.cfg: |
    [general]
    # DNS server listen address
    listen = ":53"
    # Protocol (both for both UDP and TCP)
    protocol = "both"
    # Domain name to serve DNS records for (must be configured in your DNS)
    # This should be set to the domain where acme-dns will be authoritative
    domain = "acme.example.com"
    # SOA record configuration
    nsname = "ns1.acme.example.com"
    nsadmin = "admin.example.com"
    # Record configuration
    records = [
        # A record for the DNS server itself
        "acme.example.com. A 1.2.3.4",
        # NS record
        "acme.example.com. NS ns1.acme.example.com.",
    ]

    [database]
    # Database engine (sqlite3 or postgres)
    engine = "sqlite3"
    # SQLite database path
    connection = "/var/lib/acme-dns/acme-dns.db"

    [api]
    # HTTP API listen address
    listen = ":80"
    # CORS origin setting (use "*" for development, specific origins for production)
    cors_origins = ["*"]
    # Use TLS for API (false since we're behind a service)
    tls = "none"
    # Disable registration endpoint (set to true to prevent unauthorized registrations)
    disable_registration = false

    [logconfig]
    # Log level (trace, debug, info, warning, error, fatal, panic)
    loglevel = "info"
    # Log format (json or text)
    logtype = "json"
